#N canvas 499 72 1408 797 10;
#X msg 94 81 open \$1;
#X msg 18 81 devices;
#X obj 491 594 import mrpeach;
#X msg 170 81 close;
#X floatatom 94 288 5 0 100 0 - - -, f 5;
#X floatatom 186 288 5 101 200 0 - - -, f 5;
#X floatatom 286 288 5 201 300 0 - - -, f 5;
#X floatatom 391 288 5 301 400 0 - - -, f 5;
#X floatatom 94 404 5 0 0 0 - - -, f 5;
#X floatatom 186 400 5 0 0 0 - - -, f 5;
#X floatatom 286 401 5 0 0 0 - - -, f 5;
#X floatatom 391 402 5 0 0 0 - - -, f 5;
#X obj 94 599 packOSC;
#X obj 94 673 udpsend;
#X msg 491 652 disconnect;
#X floatatom 503 288 5 0 100 0 - - -, f 5;
#X floatatom 594 288 5 101 200 0 - - -, f 5;
#X floatatom 694 288 5 201 300 0 - - -, f 5;
#X floatatom 799 288 5 301 400 0 - - -, f 5;
#X floatatom 503 404 5 0 0 0 - - -, f 5;
#X floatatom 594 403 5 0 0 0 - - -, f 5;
#X floatatom 694 406 5 0 0 0 - - -, f 5;
#X floatatom 799 404 5 0 0 0 - - -, f 5;
#X msg 94 504 send /vol1 \$1;
#X obj 94 140 comport \$1 115200;
#X obj 94 16 hradio 25 1 0 8 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X obj 94 239 split 101 200;
#X obj 186 239 split 201 300;
#X obj 286 239 split 301 400;
#X obj 391 239 split 401 500;
#X obj 503 239 split 501 600;
#X obj 594 239 split 601 700;
#X obj 694 239 split 701 800;
#X obj 799 239 split 801 900;
#X obj 94 331 autoscale 0.001 0.999, f 13;
#X obj 186 331 autoscale 0.001 0.999, f 13;
#X obj 286 331 autoscale 0.001 0.999, f 13;
#X obj 391 331 autoscale 0.001 0.999, f 13;
#X obj 503 331 autoscale 0.001 0.999, f 13;
#X obj 594 331 autoscale 0.001 0.999, f 13;
#X obj 694 331 autoscale 0.001 0.999, f 13;
#X obj 799 331 autoscale 0.001 0.999, f 13;
#X msg 186 505 send /vol2 \$1;
#X msg 286 506 send /vol3 \$1;
#X msg 391 505 send /vol4 \$1;
#X msg 503 503 send /vol5 \$1;
#X msg 594 504 send /vol6 \$1;
#X msg 694 505 send /vol7 \$1;
#X msg 799 504 send /vol8 \$1;
#X obj 94 173 serial_print;
#X text 314 20 # COM NO.;
#X text 209 162 # SERIAL_PRINT ABSTRACTION -> allows recognition of
data from Arduino Serial.print() or Serial.println() functions, f
116;
#X text 901 236 # Split incoming integer data into ranges for each
volume fader, f 33;
#X text 152 601 # Pack as OSC message and send as UDP packet;
#X text 651 623 # Network Connection functions;
#X text 651 594 # Import mrpeach network and OSC externals;
#X text 901 502 # Send independent OSC '/vol' messages for each pot/fader
, f 29;
#X msg 491 623 connect localhost 8888;
#X text 901 336 # Scale the data between 0 and 1 so it can be recognised
by REAPER volume actions, f 42;
#X text 209 184 # Import from 'Arduino_Pd' abstraction;
#X text 102 47 0;
#X text 125 47 1;
#X text 150 47 2;
#X text 171 47 ...;
#X connect 0 0 24 0;
#X connect 1 0 24 0;
#X connect 3 0 24 0;
#X connect 4 0 34 0;
#X connect 5 0 35 0;
#X connect 6 0 36 0;
#X connect 7 0 37 0;
#X connect 8 0 23 0;
#X connect 9 0 42 0;
#X connect 10 0 43 0;
#X connect 11 0 44 0;
#X connect 12 0 13 0;
#X connect 14 0 13 0;
#X connect 15 0 38 0;
#X connect 16 0 39 0;
#X connect 17 0 40 0;
#X connect 18 0 41 0;
#X connect 19 0 45 0;
#X connect 20 0 46 0;
#X connect 21 0 47 0;
#X connect 22 0 48 0;
#X connect 23 0 12 0;
#X connect 24 0 49 0;
#X connect 25 0 0 0;
#X connect 26 0 4 0;
#X connect 27 0 5 0;
#X connect 28 0 6 0;
#X connect 29 0 7 0;
#X connect 30 0 15 0;
#X connect 31 0 16 0;
#X connect 32 0 17 0;
#X connect 33 0 18 0;
#X connect 34 0 8 0;
#X connect 35 0 9 0;
#X connect 36 0 10 0;
#X connect 37 0 11 0;
#X connect 38 0 19 0;
#X connect 39 0 20 0;
#X connect 40 0 21 0;
#X connect 41 0 22 0;
#X connect 42 0 12 0;
#X connect 43 0 12 0;
#X connect 44 0 12 0;
#X connect 45 0 12 0;
#X connect 46 0 12 0;
#X connect 47 0 12 0;
#X connect 48 0 12 0;
#X connect 49 0 30 0;
#X connect 49 0 33 0;
#X connect 49 0 32 0;
#X connect 49 0 31 0;
#X connect 49 0 29 0;
#X connect 49 0 28 0;
#X connect 49 0 27 0;
#X connect 49 0 26 0;
#X connect 57 0 13 0;
